{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhian\\\\Desktop\\\\pirata-react\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the theme context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Check if a theme preference is saved in localStorage\n  const savedTheme = localStorage.getItem('theme') || 'light';\n  const [theme, setTheme] = useState(savedTheme);\n\n  // Update the data-theme attribute when the theme changes\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Toggle between light and dark theme\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    // Add transition class for smooth theme changes\n    document.body.classList.add('theme-transition');\n    // Remove the class after the transition\n    setTimeout(() => {\n      document.body.classList.remove('theme-transition');\n    }, 300);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"rQT8YYzdp7wkN0ywQdQ/vzzT4bk=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","savedTheme","localStorage","getItem","theme","setTheme","document","documentElement","setAttribute","setItem","toggleTheme","newTheme","body","classList","add","setTimeout","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cristhian/Desktop/pirata-react/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Create the theme context\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Check if a theme preference is saved in localStorage\r\n  const savedTheme = localStorage.getItem('theme') || 'light';\r\n  const [theme, setTheme] = useState(savedTheme);\r\n\r\n  // Update the data-theme attribute when the theme changes\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  // Toggle between light and dark theme\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    // Add transition class for smooth theme changes\r\n    document.body.classList.add('theme-transition');\r\n    // Remove the class after the transition\r\n    setTimeout(() => {\r\n      document.body.classList.remove('theme-transition');\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,UAAU,CAAC;;EAE9C;EACAP,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEJ,KAAK,CAAC;IAC1DF,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGP,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACM,QAAQ,CAAC;IAClB;IACAL,QAAQ,CAACM,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/C;IACAC,UAAU,CAAC,MAAM;MACfT,QAAQ,CAACM,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,kBAAkB,CAAC;IACpD,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,oBACEpB,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEM;IAAY,CAAE;IAAAX,QAAA,EAClDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACtB,EAAA,CA5BWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}