{"ast":null,"code":"var _jsxFileName = \"C:\\\\5tociclo\\\\Mi pagina web\\\\pirata-react\\\\src\\\\contexts\\\\ProgramsContext\\\\ProgramsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { getProgramsAPI, getFeaturedProgramsAPI, getProgramByIdAPI, searchProgramsAPI, getProgramsByCategoryAPI } from '../../utils/api';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgramsContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para usar el contexto\nexport const usePrograms = () => {\n  _s();\n  return useContext(ProgramsContext);\n};\n\n// Proveedor del contexto\n_s(usePrograms, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ProgramsProvider = ({\n  children\n}) => {\n  _s2();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [allPrograms, setAllPrograms] = useState([]);\n  const [featuredPrograms, setFeaturedPrograms] = useState([]);\n  const [newPrograms, setNewPrograms] = useState([]);\n  const [popularPrograms, setPopularPrograms] = useState([]);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalPrograms: 0\n  });\n\n  // Cargar todos los programas\n  const loadAllPrograms = useCallback(async (page = 1, limit = 20) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await getProgramsAPI(page, limit);\n      if (response.error) {\n        throw new Error(response.message);\n      }\n      setAllPrograms(response.programs);\n      setPagination({\n        currentPage: response.currentPage,\n        totalPages: response.totalPages,\n        totalPrograms: response.totalPrograms\n      });\n    } catch (err) {\n      setError(err.message);\n      console.error('Error cargando programas:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Cargar programas destacados\n  const loadFeaturedPrograms = useCallback(async (limit = 8) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await getFeaturedProgramsAPI(limit);\n      if (response.error) {\n        throw new Error(response.message);\n      }\n      setFeaturedPrograms(response);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error cargando programas destacados:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Cargar programas nuevos (usaremos getProgramsAPI con ordenación por fecha)\n  const loadNewPrograms = useCallback(async (limit = 8) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Para los nuevos programas, podemos usar la API general y asumir que están ordenados por fecha\n      const response = await getProgramsAPI(1, limit);\n      if (response.error) {\n        throw new Error(response.message);\n      }\n      setNewPrograms(response.programs);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error cargando programas nuevos:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Cargar programa por ID\n  const getProgramById = useCallback(async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      const program = await getProgramByIdAPI(id);\n      if (program.error) {\n        throw new Error(program.message);\n      }\n      return program;\n    } catch (err) {\n      setError(err.message);\n      console.error(`Error cargando programa con ID ${id}:`, err);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Buscar programas\n  const searchPrograms = useCallback(async (query, filters = {}, page = 1) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await searchProgramsAPI(query, filters, page);\n      if (response.error) {\n        throw new Error(response.message);\n      }\n      return response;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error en la búsqueda de programas:', err);\n      return {\n        programs: [],\n        totalPages: 0,\n        currentPage: 1,\n        totalResults: 0\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Cargar programas por categoría\n  const getProgramsByCategory = useCallback(async (category, page = 1, limit = 20) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await getProgramsByCategoryAPI(category, page, limit);\n      if (response.error) {\n        throw new Error(response.message);\n      }\n      return response;\n    } catch (err) {\n      setError(err.message);\n      console.error(`Error cargando programas de la categoría ${category}:`, err);\n      return {\n        programs: [],\n        totalPages: 0,\n        currentPage: 1,\n        totalResults: 0\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Cargar datos iniciales cuando se monte el componente\n  useEffect(() => {\n    loadFeaturedPrograms();\n    loadNewPrograms();\n  }, [loadFeaturedPrograms, loadNewPrograms]);\n\n  // Valores proporcionados por el contexto\n  const value = {\n    loading,\n    error,\n    allPrograms,\n    featuredPrograms,\n    newPrograms,\n    popularPrograms,\n    pagination,\n    loadAllPrograms,\n    loadFeaturedPrograms,\n    loadNewPrograms,\n    getProgramById,\n    searchPrograms,\n    getProgramsByCategory\n  };\n  return /*#__PURE__*/_jsxDEV(ProgramsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProgramsProvider, \"NbphPggiCIdSNQK71kAAzXcA3SM=\");\n_c = ProgramsProvider;\nexport default ProgramsContext;\nvar _c;\n$RefreshReg$(_c, \"ProgramsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","getProgramsAPI","getFeaturedProgramsAPI","getProgramByIdAPI","searchProgramsAPI","getProgramsByCategoryAPI","jsxDEV","_jsxDEV","ProgramsContext","usePrograms","_s","ProgramsProvider","children","_s2","loading","setLoading","error","setError","allPrograms","setAllPrograms","featuredPrograms","setFeaturedPrograms","newPrograms","setNewPrograms","popularPrograms","setPopularPrograms","pagination","setPagination","currentPage","totalPages","totalPrograms","loadAllPrograms","page","limit","response","Error","message","programs","err","console","loadFeaturedPrograms","loadNewPrograms","getProgramById","id","program","searchPrograms","query","filters","totalResults","getProgramsByCategory","category","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/5tociclo/Mi pagina web/pirata-react/src/contexts/ProgramsContext/ProgramsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  getProgramsAPI, \r\n  getFeaturedProgramsAPI, \r\n  getProgramByIdAPI, \r\n  searchProgramsAPI, \r\n  getProgramsByCategoryAPI \r\n} from '../../utils/api';\r\n\r\n// Crear el contexto\r\nconst ProgramsContext = createContext();\r\n\r\n// Hook personalizado para usar el contexto\r\nexport const usePrograms = () => useContext(ProgramsContext);\r\n\r\n// Proveedor del contexto\r\nexport const ProgramsProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [allPrograms, setAllPrograms] = useState([]);\r\n  const [featuredPrograms, setFeaturedPrograms] = useState([]);\r\n  const [newPrograms, setNewPrograms] = useState([]);\r\n  const [popularPrograms, setPopularPrograms] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalPrograms: 0\r\n  });\r\n  \r\n  // Cargar todos los programas\r\n  const loadAllPrograms = useCallback(async (page = 1, limit = 20) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await getProgramsAPI(page, limit);\r\n      if (response.error) {\r\n        throw new Error(response.message);\r\n      }\r\n      setAllPrograms(response.programs);\r\n      setPagination({\r\n        currentPage: response.currentPage,\r\n        totalPages: response.totalPages,\r\n        totalPrograms: response.totalPrograms\r\n      });\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error cargando programas:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // Cargar programas destacados\r\n  const loadFeaturedPrograms = useCallback(async (limit = 8) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await getFeaturedProgramsAPI(limit);\r\n      if (response.error) {\r\n        throw new Error(response.message);\r\n      }\r\n      setFeaturedPrograms(response);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error cargando programas destacados:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // Cargar programas nuevos (usaremos getProgramsAPI con ordenación por fecha)\r\n  const loadNewPrograms = useCallback(async (limit = 8) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Para los nuevos programas, podemos usar la API general y asumir que están ordenados por fecha\r\n      const response = await getProgramsAPI(1, limit);\r\n      if (response.error) {\r\n        throw new Error(response.message);\r\n      }\r\n      setNewPrograms(response.programs);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error cargando programas nuevos:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // Cargar programa por ID\r\n  const getProgramById = useCallback(async (id) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const program = await getProgramByIdAPI(id);\r\n      if (program.error) {\r\n        throw new Error(program.message);\r\n      }\r\n      return program;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error(`Error cargando programa con ID ${id}:`, err);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // Buscar programas\r\n  const searchPrograms = useCallback(async (query, filters = {}, page = 1) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await searchProgramsAPI(query, filters, page);\r\n      if (response.error) {\r\n        throw new Error(response.message);\r\n      }\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error en la búsqueda de programas:', err);\r\n      return { programs: [], totalPages: 0, currentPage: 1, totalResults: 0 };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // Cargar programas por categoría\r\n  const getProgramsByCategory = useCallback(async (category, page = 1, limit = 20) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await getProgramsByCategoryAPI(category, page, limit);\r\n      if (response.error) {\r\n        throw new Error(response.message);\r\n      }\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error(`Error cargando programas de la categoría ${category}:`, err);\r\n      return { programs: [], totalPages: 0, currentPage: 1, totalResults: 0 };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // Cargar datos iniciales cuando se monte el componente\r\n  useEffect(() => {\r\n    loadFeaturedPrograms();\r\n    loadNewPrograms();\r\n  }, [loadFeaturedPrograms, loadNewPrograms]);\r\n  \r\n  // Valores proporcionados por el contexto\r\n  const value = {\r\n    loading,\r\n    error,\r\n    allPrograms,\r\n    featuredPrograms,\r\n    newPrograms,\r\n    popularPrograms,\r\n    pagination,\r\n    loadAllPrograms,\r\n    loadFeaturedPrograms,\r\n    loadNewPrograms,\r\n    getProgramById,\r\n    searchPrograms,\r\n    getProgramsByCategory\r\n  };\r\n  \r\n  return (\r\n    <ProgramsContext.Provider value={value}>\r\n      {children}\r\n    </ProgramsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProgramsContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}