{"ast":null,"code":"// Servicio para manejar las llamadas a la API\nimport API_CONFIG from './apiConfig';\n\n// Controlador de errores genérico\nconst handleError = error => {\n  console.error('API Error:', error);\n  let message = 'Ocurrió un error desconocido';\n  if (error.response) {\n    // El servidor respondió con un código de error\n    message = error.response.data.message || `Error ${error.response.status}`;\n  } else if (error.request) {\n    // La petición se hizo pero no se recibió respuesta\n    message = 'No se pudo conectar con el servidor';\n  } else {\n    // Error al configurar la petición\n    message = error.message;\n  }\n  return {\n    error: true,\n    message\n  };\n};\n\n// Funciones auxiliares para trabajar con localStorage\nconst getToken = () => localStorage.getItem('userToken');\nconst getAuthHeader = () => {\n  const token = getToken();\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\n\n// Funciones para el API de programas\nexport const getProgramsAPI = async (page = 1, limit = 20, category = null) => {\n  try {\n    let url = `${API_CONFIG.BASE_URL}/programs?page=${page}&limit=${limit}`;\n    if (category) url += `&category=${encodeURIComponent(category)}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Error obteniendo programas');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const getProgramByIdAPI = async id => {\n  try {\n    const response = await fetch(`${API_CONFIG.BASE_URL}/programs/${id}`);\n    if (!response.ok) {\n      throw new Error('Programa no encontrado');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const searchProgramsAPI = async (query, filters = {}, page = 1, limit = 20) => {\n  try {\n    let url = `${API_CONFIG.BASE_URL}/programs/search?q=${encodeURIComponent(query)}&page=${page}&limit=${limit}`;\n\n    // Añadir filtros adicionales\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) url += `&${key}=${encodeURIComponent(value)}`;\n    });\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Error en la búsqueda');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const getFeaturedProgramsAPI = async (limit = 8) => {\n  try {\n    const response = await fetch(`${API_CONFIG.BASE_URL}/programs/featured?limit=${limit}`);\n    if (!response.ok) {\n      throw new Error('Error obteniendo programas destacados');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const getProgramsByCategoryAPI = async (category, page = 1, limit = 20) => {\n  try {\n    const response = await fetch(`${API_CONFIG.BASE_URL}/programs/category/${encodeURIComponent(category)}?page=${page}&limit=${limit}`);\n    if (!response.ok) {\n      throw new Error(`Error obteniendo programas de la categoría ${category}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n// Funciones para autenticación\nexport const loginAPI = async credentials => {\n  try {\n    const response = await fetch(`${API_CONFIG.BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Error al iniciar sesión');\n    }\n    const data = await response.json();\n    // Guardar token en localStorage\n    localStorage.setItem('userToken', data.token);\n    localStorage.setItem('userData', JSON.stringify({\n      id: data._id,\n      username: data.username,\n      isAdmin: data.isAdmin\n    }));\n    return data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const registerAPI = async userData => {\n  try {\n    const response = await fetch(`${API_CONFIG.BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Error al registrar usuario');\n    }\n    const data = await response.json();\n    // Guardar token en localStorage\n    localStorage.setItem('userToken', data.token);\n    localStorage.setItem('userData', JSON.stringify({\n      id: data._id,\n      username: data.username,\n      isAdmin: data.isAdmin\n    }));\n    return data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const logoutAPI = () => {\n  localStorage.removeItem('userToken');\n  localStorage.removeItem('userData');\n  return {\n    success: true\n  };\n};\nexport const getCurrentUserAPI = () => {\n  const userData = localStorage.getItem('userData');\n  return userData ? JSON.parse(userData) : null;\n};\nexport const isLoggedInAPI = () => {\n  return !!getToken();\n};\nexport const isAdminAPI = () => {\n  const userData = getCurrentUserAPI();\n  return userData ? userData.isAdmin : false;\n};","map":{"version":3,"names":["API_CONFIG","handleError","error","console","message","response","data","status","request","getToken","localStorage","getItem","getAuthHeader","token","Authorization","getProgramsAPI","page","limit","category","url","BASE_URL","encodeURIComponent","fetch","ok","Error","json","getProgramByIdAPI","id","searchProgramsAPI","query","filters","Object","entries","forEach","key","value","getFeaturedProgramsAPI","getProgramsByCategoryAPI","loginAPI","credentials","method","headers","body","JSON","stringify","errorData","setItem","_id","username","isAdmin","registerAPI","userData","logoutAPI","removeItem","success","getCurrentUserAPI","parse","isLoggedInAPI","isAdminAPI"],"sources":["C:/5tociclo/Mi pagina web/pirata-react/src/utils/api.js"],"sourcesContent":["// Servicio para manejar las llamadas a la API\r\nimport API_CONFIG from './apiConfig';\r\n\r\n// Controlador de errores genérico\r\nconst handleError = (error) => {\r\n  console.error('API Error:', error);\r\n  let message = 'Ocurrió un error desconocido';\r\n  \r\n  if (error.response) {\r\n    // El servidor respondió con un código de error\r\n    message = error.response.data.message || `Error ${error.response.status}`;\r\n  } else if (error.request) {\r\n    // La petición se hizo pero no se recibió respuesta\r\n    message = 'No se pudo conectar con el servidor';\r\n  } else {\r\n    // Error al configurar la petición\r\n    message = error.message;\r\n  }\r\n  \r\n  return { error: true, message };\r\n};\r\n\r\n// Funciones auxiliares para trabajar con localStorage\r\nconst getToken = () => localStorage.getItem('userToken');\r\n\r\nconst getAuthHeader = () => {\r\n  const token = getToken();\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n};\r\n\r\n// Funciones para el API de programas\r\nexport const getProgramsAPI = async (page = 1, limit = 20, category = null) => {\r\n  try {\r\n    let url = `${API_CONFIG.BASE_URL}/programs?page=${page}&limit=${limit}`;\r\n    if (category) url += `&category=${encodeURIComponent(category)}`;\r\n    \r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error('Error obteniendo programas');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n};\r\n\r\nexport const getProgramByIdAPI = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/programs/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error('Programa no encontrado');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n};\r\n\r\nexport const searchProgramsAPI = async (query, filters = {}, page = 1, limit = 20) => {\r\n  try {\r\n    let url = `${API_CONFIG.BASE_URL}/programs/search?q=${encodeURIComponent(query)}&page=${page}&limit=${limit}`;\r\n    \r\n    // Añadir filtros adicionales\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value) url += `&${key}=${encodeURIComponent(value)}`;\r\n    });\r\n    \r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error('Error en la búsqueda');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n};\r\n\r\nexport const getFeaturedProgramsAPI = async (limit = 8) => {\r\n  try {\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/programs/featured?limit=${limit}`);\r\n    if (!response.ok) {\r\n      throw new Error('Error obteniendo programas destacados');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n};\r\n\r\nexport const getProgramsByCategoryAPI = async (category, page = 1, limit = 20) => {\r\n  try {\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/programs/category/${encodeURIComponent(category)}?page=${page}&limit=${limit}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Error obteniendo programas de la categoría ${category}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n};\r\n\r\n// Funciones para autenticación\r\nexport const loginAPI = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Error al iniciar sesión');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    // Guardar token en localStorage\r\n    localStorage.setItem('userToken', data.token);\r\n    localStorage.setItem('userData', JSON.stringify({\r\n      id: data._id,\r\n      username: data.username,\r\n      isAdmin: data.isAdmin,\r\n    }));\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n};\r\n\r\nexport const registerAPI = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Error al registrar usuario');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    // Guardar token en localStorage\r\n    localStorage.setItem('userToken', data.token);\r\n    localStorage.setItem('userData', JSON.stringify({\r\n      id: data._id,\r\n      username: data.username,\r\n      isAdmin: data.isAdmin,\r\n    }));\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n};\r\n\r\nexport const logoutAPI = () => {\r\n  localStorage.removeItem('userToken');\r\n  localStorage.removeItem('userData');\r\n  return { success: true };\r\n};\r\n\r\nexport const getCurrentUserAPI = () => {\r\n  const userData = localStorage.getItem('userData');\r\n  return userData ? JSON.parse(userData) : null;\r\n};\r\n\r\nexport const isLoggedInAPI = () => {\r\n  return !!getToken();\r\n};\r\n\r\nexport const isAdminAPI = () => {\r\n  const userData = getCurrentUserAPI();\r\n  return userData ? userData.isAdmin : false;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}